idan356, davidnir1
===============================================================================
Idan Gabay, ID 312415706, idan.gabay@mail.huji.ac.il
David Nir, ID 203487293, david.nir1@mail.huji.ac.il
===============================================================================

                           Project 7 - A VM to Assembly translator
                           -----------------------


Submitted Files
---------------
README - This file.
main.java
ArithmeticBooleanCommand.java
AssemblyBlock.java
MemoryAccessCommand.java
Parser.java
VmCommand.java
VmSyntaxException.java
VmToAssemblyFileWriter.java
Makefile
VMtranslator

Remarks
-------
Explanation on how this program works:
We have four classes which do the heavy-lifting:
VmCommand - This class' objects each represent a single VM command such as "push argument 2", they have the
ability to generate assembly code which corresponds to the command in hand.
AssemblyBlock - This class' objects each represent a block of assembly commands which together form a single
VM command.
Parser - This class' objects are tasked with reading a file, creating a usable data structure which houses
it's lines and then parsing these lines to create an array list of all of the commands (VmCommand list) inside
the file.
VmToAssemblyFileWrite - This class' objects are tasked with receiving some input file's path, or an input
directory's path, and creating an output .asm file which holds assembly code translated from the input file's
VM code.


Usage:
---------------

Execution:
    1) make                                         (to compile everything and get permissions)
    2) ./VMtranslator <args>                        (to run the program on the given arguments)

available commands:
    make - compiles everything and gives permissions
    make tar - creates a tar named project7.tar from all of the assets in this project
    make clean - removes all .class files created in compilation

