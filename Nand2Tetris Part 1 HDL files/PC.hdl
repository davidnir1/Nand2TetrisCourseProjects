// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {

	//Note: the load bit for the register is (reset Or load Or inc) since for each of them we 
	// need to update the input (and load it) for the register.
	
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
	Inc16(in=regOut,out=regOutP1);
	
	// A = (inc == 0? regOut : regOut+1)
	Mux16(a=regOut,b=regOutP1,sel=inc,out=incr); 
	
	// B = (load == 0? A : input)
    Mux16(a=incr,b=in,sel=load,out=incVsLoad);
	
	// C = (reset == 0? B : 0)
	Mux16(a=incVsLoad,b=false,sel=reset,out=regIn);
	
	// these two or's will trigger loading into the register as needed
	Or(a=reset,b=load,out=resetOrLoad);
	Or(a=resetOrLoad,b=inc,out=regLoad);
	Register(in=regIn,load=regLoad,out=out,out=regOut);
	
}
