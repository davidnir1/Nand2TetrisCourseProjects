function Snake.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push argument 0
push argument 1
call LinkedList.new 2
pop this 0
push argument 2
pop this 1
push constant 130
pop this 2
push constant 131
pop this 4
push constant 132
pop this 3
push constant 133
pop this 5
push pointer 0
return
function Snake.isTouching 0
push argument 0
pop pointer 0
push this 0
push argument 1
push argument 2
call LinkedList.exists 3
return
function Snake.getLength 0
push argument 0
pop pointer 0
push this 0
call LinkedList.getLength 1
return
function Snake.add 1
push argument 0
pop pointer 0
push argument 1
push argument 2
call Node.new 2
pop local 0
push this 0
push local 0
call LinkedList.add 2
pop temp 0
push constant 0
return
function Snake.reset 0
push argument 0
pop pointer 0
push this 0
push argument 1
push argument 2
call LinkedList.reset 3
pop temp 0
push argument 3
pop this 1
push constant 0
return
function Snake.removeTail 0
push argument 0
pop pointer 0
push this 0
call LinkedList.removeTail 1
pop temp 0
push constant 0
return
function Snake.getBody 0
push argument 0
pop pointer 0
push this 0
return
function Snake.getHead 0
push argument 0
pop pointer 0
push this 0
call LinkedList.getHead 1
return
function Snake.getTail 0
push argument 0
pop pointer 0
push this 0
call LinkedList.getTail 1
return
function Snake.setDirection 4
push argument 0
pop pointer 0
push this 1
push this 2
eq
push argument 1
push this 3
eq
and
pop local 0
push this 1
push this 3
eq
push argument 1
push this 2
eq
and
pop local 1
push this 1
push this 4
eq
push argument 1
push this 5
eq
and
pop local 2
push this 1
push this 5
eq
push argument 1
push this 4
eq
and
pop local 3
push local 0
push local 1
or
push local 2
or
push local 3
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
pop this 1
push constant 0
return
function Snake.doSnakeStuff 2
push argument 0
pop pointer 0
push this 0
call LinkedList.getHead 1
pop local 0
push this 1
push this 4
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
call Node.getX 1
push constant 1
sub
push local 0
call Node.getY 1
call Snake.add 3
pop temp 0
label IF_FALSE0
push this 1
push this 5
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 0
call Node.getX 1
push constant 1
add
push local 0
call Node.getY 1
call Snake.add 3
pop temp 0
label IF_FALSE1
push this 1
push this 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 0
call Node.getX 1
push local 0
call Node.getY 1
push constant 1
add
call Snake.add 3
pop temp 0
label IF_FALSE2
push this 1
push this 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push local 0
call Node.getX 1
push local 0
call Node.getY 1
push constant 1
sub
call Snake.add 3
pop temp 0
label IF_FALSE3
push argument 1
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
call Snake.getTail 1
pop local 1
push local 1
call Node.getX 1
push local 1
call Node.getY 1
call Drawer.clearCell 2
pop temp 0
push pointer 0
call Snake.removeTail 1
pop temp 0
label IF_FALSE4
push constant 0
return
function Snake.selfCollision 2
push argument 0
pop pointer 0
push this 0
call LinkedList.getHead 1
pop local 0
push local 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
call Node.getNext 1
pop local 1
label WHILE_EXP0
push local 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 1
call Node.getX 1
push local 0
call Node.getX 1
eq
push local 1
call Node.getY 1
push local 0
call Node.getY 1
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push local 1
call Node.getNext 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
